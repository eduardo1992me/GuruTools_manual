import type * as Stitches from "@stitches/react";
export declare const defaultTokens: {
    fonts: {
        heading: string;
        base: string;
        mono: string;
    };
    fontSizes: {
        "2xs": string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
        "4xl": string;
        "5xl": string;
        "6xl": string;
    };
    fontWeights: {
        hairline: number;
        thin: number;
        light: number;
        normal: number;
        medium: number;
        semibold: number;
        bold: number;
        extrabold: number;
        black: number;
    };
    lineHeights: {
        normal: string;
        none: number;
        shorter: number;
        short: number;
        base: number;
        tall: number;
        taller: string;
        "3": string;
        "4": string;
        "5": string;
        "6": string;
        "7": string;
        "8": string;
        "9": string;
        "10": string;
    };
    letterSpacings: {
        tighter: string;
        tight: string;
        normal: string;
        wide: string;
        wider: string;
        widest: string;
    };
    space: {
        px: string;
        0: string;
        0.5: string;
        1: string;
        1.5: string;
        2: string;
        2.5: string;
        3: string;
        3.5: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        12: string;
        14: string;
        16: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        44: string;
        48: string;
        52: string;
        56: string;
        60: string;
        64: string;
        72: string;
        80: string;
        96: string;
    };
    sizes: {
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        12: string;
        14: string;
        16: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        44: string;
        48: string;
        52: string;
        56: string;
        60: string;
        64: string;
        72: string;
        80: string;
        96: string;
        max: string;
        min: string;
        full: string;
        "3xs": string;
        "2xs": string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
        "4xl": string;
        "5xl": string;
        "6xl": string;
        "7xl": string;
        "8xl": string;
    };
    radii: {
        none: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
        full: string;
        base: string;
        halfBase: string;
    };
    zIndices: {
        hide: number;
        auto: string;
        base: number;
        docked: number;
        dropdown: number;
        sticky: number;
        banner: number;
        overlay: number;
        modal: number;
        popover: number;
        skipLink: number;
        toast: number;
        tooltip: number;
    };
    borderWeights: {
        light: string;
        normal: string;
        bold: string;
        extrabold: string;
        black: string;
    };
    shadows: {
        "2xs": string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
        outline: string;
        inner: string;
        none: string;
        dark: string;
    };
    transitions: {
        default: string;
    };
    breakpoints: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        xxl: string;
    };
    colors: {
        gray1: string;
        gray2: string;
        gray3: string;
        gray4: string;
        gray5: string;
        gray6: string;
        gray7: string;
        gray8: string;
        gray9: string;
        gray10: string;
        gray11: string;
        gray12: string;
        text1: string;
        text2: string;
        text3: string;
        text4: string;
        text5: string;
        text6: string;
        text7: string;
        text8: string;
        text9: string;
        text10: string;
        text11: string;
        text12: string;
        guru1: string;
        guru2: string;
        guru3: string;
        guru4: string;
        guru5: string;
        guru6: string;
        guru7: string;
        guru8: string;
        guru9: string;
        guru10: string;
        guru11: string;
        guru12: string;
        fellow1: string;
        fellow2: string;
        fellow3: string;
        fellow4: string;
        fellow5: string;
        fellow6: string;
        fellow7: string;
        fellow8: string;
        fellow9: string;
        fellow10: string;
        fellow11: string;
        fellow12: string;
        darkie1: string;
        darkie2: string;
        darkie3: string;
        darkie4: string;
        darkie5: string;
        darkie6: string;
        darkie7: string;
        darkie8: string;
        darkie9: string;
        darkie10: string;
        darkie11: string;
        darkie12: string;
        red1: string;
        red2: string;
        red3: string;
        red4: string;
        red5: string;
        red6: string;
        red7: string;
        red8: string;
        red9: string;
        red10: string;
        red11: string;
        red12: string;
        nature1: string;
        nature2: string;
        nature3: string;
        nature4: string;
        nature5: string;
        nature6: string;
        nature7: string;
        nature8: string;
        nature9: string;
        nature10: string;
        nature11: string;
        nature12: string;
        sunshine1: string;
        sunshine2: string;
        sunshine3: string;
        sunshine4: string;
        sunshine5: string;
        sunshine6: string;
        sunshine7: string;
        sunshine8: string;
        sunshine9: string;
        sunshine10: string;
        sunshine11: string;
        sunshine12: string;
        violet1: string;
        violet2: string;
        violet3: string;
        violet4: string;
        violet5: string;
        violet6: string;
        violet7: string;
        violet8: string;
        violet9: string;
        violet10: string;
        violet11: string;
        violet12: string;
        blackA1: string;
        blackA2: string;
        blackA3: string;
        blackA4: string;
        blackA5: string;
        blackA6: string;
        blackA7: string;
        blackA8: string;
        blackA9: string;
        blackA10: string;
        blackA11: string;
        blackA12: string;
        whiteA1: string;
        whiteA2: string;
        whiteA3: string;
        whiteA4: string;
        whiteA5: string;
        whiteA6: string;
        whiteA7: string;
        whiteA8: string;
        whiteA9: string;
        whiteA10: string;
        whiteA11: string;
        whiteA12: string;
        transparent: string;
        placeholder: string;
        surfaceLight: string;
        surfaceMid: string;
        surfaceDark: string;
    };
};
export declare const defaultThemeMap: {
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    width: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    height: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
};
declare const _default: {
    prefix: string;
    theme: {
        fonts: {
            heading: string;
            base: string;
            mono: string;
        };
        fontSizes: {
            "2xs": string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            "2xl": string;
            "3xl": string;
            "4xl": string;
            "5xl": string;
            "6xl": string;
        };
        fontWeights: {
            hairline: number;
            thin: number;
            light: number;
            normal: number;
            medium: number;
            semibold: number;
            bold: number;
            extrabold: number;
            black: number;
        };
        lineHeights: {
            normal: string;
            none: number;
            shorter: number;
            short: number;
            base: number;
            tall: number;
            taller: string;
            "3": string;
            "4": string;
            "5": string;
            "6": string;
            "7": string;
            "8": string;
            "9": string;
            "10": string;
        };
        letterSpacings: {
            tighter: string;
            tight: string;
            normal: string;
            wide: string;
            wider: string;
            widest: string;
        };
        space: {
            px: string;
            0: string;
            0.5: string;
            1: string;
            1.5: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
        sizes: {
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
            max: string;
            min: string;
            full: string;
            "3xs": string;
            "2xs": string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            "2xl": string;
            "3xl": string;
            "4xl": string;
            "5xl": string;
            "6xl": string;
            "7xl": string;
            "8xl": string;
        };
        radii: {
            none: string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            "2xl": string;
            "3xl": string;
            full: string;
            base: string;
            halfBase: string;
        };
        zIndices: {
            hide: number;
            auto: string;
            base: number;
            docked: number;
            dropdown: number;
            sticky: number;
            banner: number;
            overlay: number;
            modal: number;
            popover: number;
            skipLink: number;
            toast: number;
            tooltip: number;
        };
        borderWeights: {
            light: string;
            normal: string;
            bold: string;
            extrabold: string;
            black: string;
        };
        shadows: {
            "2xs": string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            "2xl": string;
            outline: string;
            inner: string;
            none: string;
            dark: string;
        };
        transitions: {
            default: string;
        };
        breakpoints: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            xxl: string;
        };
        colors: {
            gray1: string;
            gray2: string;
            gray3: string;
            gray4: string;
            gray5: string;
            gray6: string;
            gray7: string;
            gray8: string;
            gray9: string;
            gray10: string;
            gray11: string;
            gray12: string;
            text1: string;
            text2: string;
            text3: string;
            text4: string;
            text5: string;
            text6: string;
            text7: string;
            text8: string;
            text9: string;
            text10: string;
            text11: string;
            text12: string;
            guru1: string;
            guru2: string;
            guru3: string;
            guru4: string;
            guru5: string;
            guru6: string;
            guru7: string;
            guru8: string;
            guru9: string;
            guru10: string;
            guru11: string;
            guru12: string;
            fellow1: string;
            fellow2: string;
            fellow3: string;
            fellow4: string;
            fellow5: string;
            fellow6: string;
            fellow7: string;
            fellow8: string;
            fellow9: string;
            fellow10: string;
            fellow11: string;
            fellow12: string;
            darkie1: string;
            darkie2: string;
            darkie3: string;
            darkie4: string;
            darkie5: string;
            darkie6: string;
            darkie7: string;
            darkie8: string;
            darkie9: string;
            darkie10: string;
            darkie11: string;
            darkie12: string;
            red1: string;
            red2: string;
            red3: string;
            red4: string;
            red5: string;
            red6: string;
            red7: string;
            red8: string;
            red9: string;
            red10: string;
            red11: string;
            red12: string;
            nature1: string;
            nature2: string;
            nature3: string;
            nature4: string;
            nature5: string;
            nature6: string;
            nature7: string;
            nature8: string;
            nature9: string;
            nature10: string;
            nature11: string;
            nature12: string;
            sunshine1: string;
            sunshine2: string;
            sunshine3: string;
            sunshine4: string;
            sunshine5: string;
            sunshine6: string;
            sunshine7: string;
            sunshine8: string;
            sunshine9: string;
            sunshine10: string;
            sunshine11: string;
            sunshine12: string;
            violet1: string;
            violet2: string;
            violet3: string;
            violet4: string;
            violet5: string;
            violet6: string;
            violet7: string;
            violet8: string;
            violet9: string;
            violet10: string;
            violet11: string;
            violet12: string;
            blackA1: string;
            blackA2: string;
            blackA3: string;
            blackA4: string;
            blackA5: string;
            blackA6: string;
            blackA7: string;
            blackA8: string;
            blackA9: string;
            blackA10: string;
            blackA11: string;
            blackA12: string;
            whiteA1: string;
            whiteA2: string;
            whiteA3: string;
            whiteA4: string;
            whiteA5: string;
            whiteA6: string;
            whiteA7: string;
            whiteA8: string;
            whiteA9: string;
            whiteA10: string;
            whiteA11: string;
            whiteA12: string;
            transparent: string;
            placeholder: string;
            surfaceLight: string;
            surfaceMid: string;
            surfaceDark: string;
        };
    };
    media: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        xxl: string;
        motion: string;
        safari: string;
        hover: string;
        dark: string;
        light: string;
    };
    utils: {
        _hover: (value: Stitches.CSS<{
            media: {};
            theme: {};
            themeMap: {};
            utils: {};
        }>) => {
            "&:hover": Stitches.CSS<{
                media: {};
                theme: {};
                themeMap: {};
                utils: {};
            }>;
        };
        _active: (value: Stitches.CSS<{
            media: {};
            theme: {};
            themeMap: {};
            utils: {};
        }>) => {
            "&:active": Stitches.CSS<{
                media: {};
                theme: {};
                themeMap: {};
                utils: {};
            }>;
        };
        _focus: (value: Stitches.CSS<{
            media: {};
            theme: {};
            themeMap: {};
            utils: {};
        }>) => {
            "&:focus": Stitches.CSS<{
                media: {};
                theme: {};
                themeMap: {};
                utils: {};
            }>;
        };
        _disabled: (value: Stitches.CSS<{
            media: {};
            theme: {};
            themeMap: {};
            utils: {};
        }>) => {
            "&:disabled": Stitches.CSS<{
                media: {};
                theme: {};
                themeMap: {};
                utils: {};
            }>;
        };
        _visited: (value: Stitches.CSS<{
            media: {};
            theme: {};
            themeMap: {};
            utils: {};
        }>) => {
            "&:visited": Stitches.CSS<{
                media: {};
                theme: {};
                themeMap: {};
                utils: {};
            }>;
        };
        _focusWithin: (value: Stitches.CSS<{
            media: {};
            theme: {};
            themeMap: {};
            utils: {};
        }>) => {
            "&:focus-within": Stitches.CSS<{
                media: {};
                theme: {};
                themeMap: {};
                utils: {};
            }>;
        };
        _focusVisible: (value: Stitches.CSS<{
            media: {};
            theme: {};
            themeMap: {};
            utils: {};
        }>) => {
            "&:focus-visible": Stitches.CSS<{
                media: {};
                theme: {};
                themeMap: {};
                utils: {};
            }>;
        };
        _target: (value: Stitches.CSS<{
            media: {};
            theme: {};
            themeMap: {};
            utils: {};
        }>) => {
            "&:target": Stitches.CSS<{
                media: {};
                theme: {};
                themeMap: {};
                utils: {};
            }>;
        };
        _placeholder: (value: Stitches.CSS<{
            media: {};
            theme: {};
            themeMap: {};
            utils: {};
        }>) => {
            "&::placeholder": Stitches.CSS<{
                media: {};
                theme: {};
                themeMap: {};
                utils: {};
            }>;
        };
        bg: (value: {
            readonly [Stitches.$$PropertyValue]: "color";
        }) => {
            background: {
                readonly [Stitches.$$PropertyValue]: "color";
            };
        };
        bgColor: (value: {
            readonly [Stitches.$$PropertyValue]: "color";
        }) => {
            backgroundColor: {
                readonly [Stitches.$$PropertyValue]: "color";
            };
        };
        bgImage: (value: {
            readonly [Stitches.$$PropertyValue]: "color";
        }) => {
            backgroundImage: {
                readonly [Stitches.$$PropertyValue]: "color";
            };
        };
        linearGradient: (value: string) => {
            backgroundImage: string;
        };
        br: (value: {
            readonly [Stitches.$$PropertyValue]: "borderRadius";
        }) => {
            borderRadius: {
                readonly [Stitches.$$PropertyValue]: "borderRadius";
            };
        };
        rounded: (value: {
            readonly [Stitches.$$PropertyValue]: "borderRadius";
        }) => {
            borderRadius: {
                readonly [Stitches.$$PropertyValue]: "borderRadius";
            };
        };
        roundedTop: (value: {
            readonly [Stitches.$$PropertyValue]: "borderRadius";
        }) => {
            borderTopLeftRadius: {
                readonly [Stitches.$$PropertyValue]: "borderRadius";
            };
            borderTopRightRadius: {
                readonly [Stitches.$$PropertyValue]: "borderRadius";
            };
        };
        roundedBottom: (value: {
            readonly [Stitches.$$PropertyValue]: "borderRadius";
        }) => {
            borderBottomLeftRadius: {
                readonly [Stitches.$$PropertyValue]: "borderRadius";
            };
            borderBottomRightRadius: {
                readonly [Stitches.$$PropertyValue]: "borderRadius";
            };
        };
        roundedLeft: (value: {
            readonly [Stitches.$$PropertyValue]: "borderRadius";
        }) => {
            borderTopLeftRadius: {
                readonly [Stitches.$$PropertyValue]: "borderRadius";
            };
            borderBottomLeftRadius: {
                readonly [Stitches.$$PropertyValue]: "borderRadius";
            };
        };
        roundedRight: (value: {
            readonly [Stitches.$$PropertyValue]: "borderRadius";
        }) => {
            borderTopRightRadius: {
                readonly [Stitches.$$PropertyValue]: "borderRadius";
            };
            borderBottomRightRadius: {
                readonly [Stitches.$$PropertyValue]: "borderRadius";
            };
        };
        size: (value: {
            readonly [Stitches.$$PropertyValue]: "width";
        }) => {
            width: {
                readonly [Stitches.$$PropertyValue]: "width";
            };
            height: {
                readonly [Stitches.$$PropertyValue]: "width";
            };
        };
        btnSize: ([size, space]: [{
            readonly [Stitches.$$PropertyValue]: "height";
        }, {
            readonly [Stitches.$$PropertyValue]: "padding";
        }]) => {
            minHeight: {
                readonly [Stitches.$$PropertyValue]: "height";
            };
            height: {
                readonly [Stitches.$$PropertyValue]: "height";
            };
            paddingInlineStart: {
                readonly [Stitches.$$PropertyValue]: "padding";
            };
            paddingInlineEnd: {
                readonly [Stitches.$$PropertyValue]: "padding";
            };
        };
        w: (value: {
            readonly [Stitches.$$PropertyValue]: "width";
        }) => {
            width: {
                readonly [Stitches.$$PropertyValue]: "width";
            };
        };
        minW: (value: {
            readonly [Stitches.$$PropertyValue]: "minWidth";
        }) => {
            minWidth: {
                readonly [Stitches.$$PropertyValue]: "minWidth";
            };
        };
        maxW: (value: {
            readonly [Stitches.$$PropertyValue]: "maxWidth";
        }) => {
            maxWidht: {
                readonly [Stitches.$$PropertyValue]: "maxWidth";
            };
        };
        h: (value: {
            readonly [Stitches.$$PropertyValue]: "height";
        }) => {
            height: {
                readonly [Stitches.$$PropertyValue]: "height";
            };
        };
        minH: (value: {
            readonly [Stitches.$$PropertyValue]: "minHeight";
        }) => {
            minHeight: {
                readonly [Stitches.$$PropertyValue]: "minHeight";
            };
        };
        maxH: (value: {
            readonly [Stitches.$$PropertyValue]: "maxHeight";
        }) => {
            maxHeight: {
                readonly [Stitches.$$PropertyValue]: "maxHeight";
            };
        };
        m: (value: {
            readonly [Stitches.$$PropertyValue]: "margin";
        }) => {
            margin: {
                readonly [Stitches.$$PropertyValue]: "margin";
            };
        };
        mt: (value: {
            readonly [Stitches.$$PropertyValue]: "marginTop";
        }) => {
            marginTop: {
                readonly [Stitches.$$PropertyValue]: "marginTop";
            };
        };
        mr: (value: {
            readonly [Stitches.$$PropertyValue]: "marginRight";
        }) => {
            marginRight: {
                readonly [Stitches.$$PropertyValue]: "marginRight";
            };
        };
        mb: (value: {
            readonly [Stitches.$$PropertyValue]: "marginBottom";
        }) => {
            marginBottom: {
                readonly [Stitches.$$PropertyValue]: "marginBottom";
            };
        };
        ml: (value: {
            readonly [Stitches.$$PropertyValue]: "marginLeft";
        }) => {
            marginLeft: {
                readonly [Stitches.$$PropertyValue]: "marginLeft";
            };
        };
        mx: (value: {
            readonly [Stitches.$$PropertyValue]: "margin";
        }) => {
            marginLeft: {
                readonly [Stitches.$$PropertyValue]: "margin";
            };
            marginRight: {
                readonly [Stitches.$$PropertyValue]: "margin";
            };
        };
        my: (value: {
            readonly [Stitches.$$PropertyValue]: "margin";
        }) => {
            marginTop: {
                readonly [Stitches.$$PropertyValue]: "margin";
            };
            marginBottom: {
                readonly [Stitches.$$PropertyValue]: "margin";
            };
        };
        marginX: (value: {
            readonly [Stitches.$$PropertyValue]: "margin";
        }) => {
            marginLeft: {
                readonly [Stitches.$$PropertyValue]: "margin";
            };
            marginRight: {
                readonly [Stitches.$$PropertyValue]: "margin";
            };
        };
        marginY: (value: {
            readonly [Stitches.$$PropertyValue]: "margin";
        }) => {
            marginTop: {
                readonly [Stitches.$$PropertyValue]: "margin";
            };
            marginBottom: {
                readonly [Stitches.$$PropertyValue]: "margin";
            };
        };
        p: (value: {
            readonly [Stitches.$$PropertyValue]: "padding";
        }) => {
            padding: {
                readonly [Stitches.$$PropertyValue]: "padding";
            };
        };
        pt: (value: {
            readonly [Stitches.$$PropertyValue]: "paddingTop";
        }) => {
            paddingTop: {
                readonly [Stitches.$$PropertyValue]: "paddingTop";
            };
        };
        pr: (value: {
            readonly [Stitches.$$PropertyValue]: "paddingRight";
        }) => {
            paddingRight: {
                readonly [Stitches.$$PropertyValue]: "paddingRight";
            };
        };
        pb: (value: {
            readonly [Stitches.$$PropertyValue]: "paddingBottom";
        }) => {
            paddingBottom: {
                readonly [Stitches.$$PropertyValue]: "paddingBottom";
            };
        };
        pl: (value: {
            readonly [Stitches.$$PropertyValue]: "paddingLeft";
        }) => {
            paddingLeft: {
                readonly [Stitches.$$PropertyValue]: "paddingLeft";
            };
        };
        px: (value: {
            readonly [Stitches.$$PropertyValue]: "padding";
        }) => {
            paddingLeft: {
                readonly [Stitches.$$PropertyValue]: "padding";
            };
            paddingRight: {
                readonly [Stitches.$$PropertyValue]: "padding";
            };
        };
        py: (value: {
            readonly [Stitches.$$PropertyValue]: "padding";
        }) => {
            paddingTop: {
                readonly [Stitches.$$PropertyValue]: "padding";
            };
            paddingBottom: {
                readonly [Stitches.$$PropertyValue]: "padding";
            };
        };
        paddingX: (value: {
            readonly [Stitches.$$PropertyValue]: "padding";
        }) => {
            paddingLeft: {
                readonly [Stitches.$$PropertyValue]: "padding";
            };
            paddingRight: {
                readonly [Stitches.$$PropertyValue]: "padding";
            };
        };
        paddingY: (value: {
            readonly [Stitches.$$PropertyValue]: "padding";
        }) => {
            paddingTop: {
                readonly [Stitches.$$PropertyValue]: "padding";
            };
            paddingBottom: {
                readonly [Stitches.$$PropertyValue]: "padding";
            };
        };
        shadow: (value: {
            readonly [Stitches.$$PropertyValue]: "boxShadow";
        }) => {
            boxShadow: {
                readonly [Stitches.$$PropertyValue]: "boxShadow";
            };
        };
        borderW: (value: {
            readonly [Stitches.$$PropertyValue]: "borderWidth";
        }) => {
            borderWidth: {
                readonly [Stitches.$$PropertyValue]: "borderWidth";
            };
        };
        borderTopW: (value: {
            readonly [Stitches.$$PropertyValue]: "borderTopWidth";
        }) => {
            borderTopWidth: {
                readonly [Stitches.$$PropertyValue]: "borderTopWidth";
            };
        };
        borderRightW: (value: {
            readonly [Stitches.$$PropertyValue]: "borderRightWidth";
        }) => {
            borderRightWidth: {
                readonly [Stitches.$$PropertyValue]: "borderRightWidth";
            };
        };
        borderBottomW: (value: {
            readonly [Stitches.$$PropertyValue]: "borderBottomWidth";
        }) => {
            borderBottomWidth: {
                readonly [Stitches.$$PropertyValue]: "borderBottomWidth";
            };
        };
        borderLeftW: (value: {
            readonly [Stitches.$$PropertyValue]: "borderLeftWidth";
        }) => {
            borderLeftWidth: {
                readonly [Stitches.$$PropertyValue]: "borderLeftWidth";
            };
        };
        borderS: (value: {
            readonly [Stitches.$$PropertyValue]: "borderStyle";
        }) => {
            borderStyle: {
                readonly [Stitches.$$PropertyValue]: "borderStyle";
            };
        };
        borderTopS: (value: {
            readonly [Stitches.$$PropertyValue]: "borderTopStyle";
        }) => {
            borderTopStyle: {
                readonly [Stitches.$$PropertyValue]: "borderTopStyle";
            };
        };
        borderRightS: (value: {
            readonly [Stitches.$$PropertyValue]: "borderRightStyle";
        }) => {
            borderRightStyle: {
                readonly [Stitches.$$PropertyValue]: "borderRightStyle";
            };
        };
        borderBottomS: (value: {
            readonly [Stitches.$$PropertyValue]: "borderBottomStyle";
        }) => {
            borderBottomStyle: {
                readonly [Stitches.$$PropertyValue]: "borderBottomStyle";
            };
        };
        borderLeftS: (value: {
            readonly [Stitches.$$PropertyValue]: "borderLeftStyle";
        }) => {
            borderLeftStyle: {
                readonly [Stitches.$$PropertyValue]: "borderLeftStyle";
            };
        };
        spacing: (value: {
            readonly [Stitches.$$PropertyValue]: "gap";
        }) => {
            gap: {
                readonly [Stitches.$$PropertyValue]: "gap";
            };
        };
    };
    themeMap: {
        gap: "space";
        gridGap: "space";
        columnGap: "space";
        gridColumnGap: "space";
        rowGap: "space";
        gridRowGap: "space";
        inset: "space";
        insetBlock: "space";
        insetBlockEnd: "space";
        insetBlockStart: "space";
        insetInline: "space";
        insetInlineEnd: "space";
        insetInlineStart: "space";
        margin: "space";
        marginTop: "space";
        marginRight: "space";
        marginBottom: "space";
        marginLeft: "space";
        marginBlock: "space";
        marginBlockEnd: "space";
        marginBlockStart: "space";
        marginInline: "space";
        marginInlineEnd: "space";
        marginInlineStart: "space";
        padding: "space";
        paddingTop: "space";
        paddingRight: "space";
        paddingBottom: "space";
        paddingLeft: "space";
        paddingBlock: "space";
        paddingBlockEnd: "space";
        paddingBlockStart: "space";
        paddingInline: "space";
        paddingInlineEnd: "space";
        paddingInlineStart: "space";
        scrollMargin: "space";
        scrollMarginTop: "space";
        scrollMarginRight: "space";
        scrollMarginBottom: "space";
        scrollMarginLeft: "space";
        scrollMarginBlock: "space";
        scrollMarginBlockEnd: "space";
        scrollMarginBlockStart: "space";
        scrollMarginInline: "space";
        scrollMarginInlineEnd: "space";
        scrollMarginInlineStart: "space";
        scrollPadding: "space";
        scrollPaddingTop: "space";
        scrollPaddingRight: "space";
        scrollPaddingBottom: "space";
        scrollPaddingLeft: "space";
        scrollPaddingBlock: "space";
        scrollPaddingBlockEnd: "space";
        scrollPaddingBlockStart: "space";
        scrollPaddingInline: "space";
        scrollPaddingInlineEnd: "space";
        scrollPaddingInlineStart: "space";
        top: "space";
        right: "space";
        bottom: "space";
        left: "space";
        fontSize: "fontSizes";
        background: "colors";
        backgroundColor: "colors";
        backgroundImage: "colors";
        borderImage: "colors";
        border: "colors";
        borderBlock: "colors";
        borderBlockEnd: "colors";
        borderBlockStart: "colors";
        borderBottom: "colors";
        borderBottomColor: "colors";
        borderColor: "colors";
        borderInline: "colors";
        borderInlineEnd: "colors";
        borderInlineStart: "colors";
        borderLeft: "colors";
        borderLeftColor: "colors";
        borderRight: "colors";
        borderRightColor: "colors";
        borderTop: "colors";
        borderTopColor: "colors";
        caretColor: "colors";
        color: "colors";
        columnRuleColor: "colors";
        outline: "colors";
        outlineColor: "colors";
        fill: "colors";
        stroke: "colors";
        textDecorationColor: "colors";
        fontFamily: "fonts";
        fontWeight: "fontWeights";
        lineHeight: "lineHeights";
        letterSpacing: "letterSpacings";
        blockSize: "sizes";
        minBlockSize: "sizes";
        maxBlockSize: "sizes";
        inlineSize: "sizes";
        minInlineSize: "sizes";
        maxInlineSize: "sizes";
        width: "sizes";
        minWidth: "sizes";
        maxWidth: "sizes";
        height: "sizes";
        minHeight: "sizes";
        maxHeight: "sizes";
        flexBasis: "sizes";
        gridTemplateColumns: "sizes";
        gridTemplateRows: "sizes";
        borderWidth: "borderWidths";
        borderTopWidth: "borderWidths";
        borderLeftWidth: "borderWidths";
        borderRightWidth: "borderWidths";
        borderBottomWidth: "borderWidths";
        borderStyle: "borderStyles";
        borderTopStyle: "borderStyles";
        borderLeftStyle: "borderStyles";
        borderRightStyle: "borderStyles";
        borderBottomStyle: "borderStyles";
        borderRadius: "radii";
        borderTopLeftRadius: "radii";
        borderTopRightRadius: "radii";
        borderBottomRightRadius: "radii";
        borderBottomLeftRadius: "radii";
        boxShadow: "shadows";
        textShadow: "shadows";
        transition: "transitions";
        zIndex: "zIndices";
    };
};
export default _default;
